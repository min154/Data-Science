In [33]
책에 나오듯 사이킷런 모듈에 있는 정규화 함수를 이용해 각 데이터를 정규화
데이터들을 서로 비교하기 편하게 각 항목의 최대값을 1로 해서 값을 비율로 나타낸 것


In [34]
1장 CCTV 데이터셋 중 구별 인구수와 소계, CCTV 개수였죠, 이 컬럼에 해당하는 값을 가져와서 저희가 지금 실습하고 있는 데이터프레임에 인구수와 CCTV라는 컬럼명으로 값을 추가해줬구요


In [35]
강간, 강도, 살인, 절도, 폭력 값을 sum으로 모두 더해서 그 값을 범죄라는 컬럼에 저장했죠


In [36]
검거율도 같은 방식으로 합해준거구요





그리고 다음으로는 시각화 도구인 Seaborn을 이용해서 그래프를 그리는 실습이었는데


In [37]
numpy의 linspace 함수 : 등차수열을 생성하는 함수
np.linspace(start, stop, num) - 배열의 시작값, 배열의 끝값, 배열의 요소 개수

그래서 x축 값을 0부터 14사이의 100개의 숫자로 정하고, y축 값은 sin 값으로 정해서 그래프를 그리면 다음과 같이 나오죠
쥬피터 노트북을 실행한 브라우저에서 바로 그래프나 그림을 확인할 수 있도록 해주는 코드


In [38], In [39], In[40]
그리고 그래프의 배경 스타일도 지정해줄 수가 있는데 화이트는 흰색 배경, 다크라고 쓰면 배경이 어둡게 변하는 걸 볼 수 있구요, 화이트그리드는 흰 배경에 격자 무늬로 나타납니다

despine 함수 : 축, 테두리 제거
디폴트 값이 top, right라서 아무것도 안 넣으면 두 개만 제거해주고, left = True, bottom = True를 써주면 하단이랑 왼쪽 테두리 모두 없어져요


In [42]
Seaborn에 내장되어 있는 Tips라는 데이터셋을 가져와서


In [43]
boxplot 함수를 이용해서 x축을 요일, y축을 전체 금액으로 상자 그림을 그리는 것도 있었고


In [44]
hue라는 옵션을 이용해서 흡연자를 기준으로 또 데이터를 한번 더 구분해서 표현한 거죠


In [45]
그리고 이건 swarmplot이라고, boxplot과 비슷하지만 데이터의 분포 양상을 자세하게 확인할 수 있다는 장점을 가지고 있어요


In [46]
두 그래프를 같이 나타내면 이런 식으로. 확실히 swarmplot이 전반적인 분포를 보는 데는 좀 더 정확하죠


In [47]
책에 있는 코드를 그대로 실행하면 이렇게 경고가 떴을 거에요 아마
이게 더이상 size라는 매개변수를 사용하지 않고 height라는 매개변수를 사용한다 라는 의미라서 size만 height로 바꾼 다음 실행하면 경고 없이 잘 실행됩니다


In [48]
lmplot 함수로 각 데이터를 산점도로 표현한 다음, 회귀 직선까지 그려서 선형관계를 알아보는 그래프


In [49]
아까와 같이 hue 옵션으로 흡연자와 비흡연자를 구분지어 각각 따로 그래프를 그린 그림이구요
팔레트로 색상까지 지정해서 바꿀 수 있다는 거


In [52]
히트맵 : 열분포, 2개의 범주형 변수에 대한 데이터 분포를 색상을 이용하여 시각화
annot = True : 각 셀에 숫자 입력, fmt = 'd' 정수 형태로 숫자 입력 옵션


In [54]
pairplot 함수 : 각각의 변수들 사이의 관계를 보여주는 그래프를 보기 좋게 한 번에 정리해서 보여주는 함수

같은 변수들의 관계를 나타내는 이 대각선 방향으로는 히스토그램이나 밀도(분포) 그래프를 그리고, 나머지는 산점도로 서로 다른 변수들 간의 관계를 나타내고 있습니다
아이리스 데이터셋은 워낙 기초적으로 많이 다뤄지고 있고, 그만큼 관계가 뚜렷하게 나타나는 데이터셋이라 보면은, 각 산점도에 점들이 랜덤하게 마구잡이로 퍼져있는 게 아니라 그냥 대충만 봐도 관계를 어느정도 파악할 수 있을 정도로 어떤 경향성을 가지고 분포해 있는 걸 볼 수 있죠


In [55]
그리고 매개변수를 이용해서 전체 중에서 보고싶은 몇 개만 골라서 볼 수도 있다는 점.




In [59]
오류는 우리가 원하는 글꼴이 없다 이런 폰트 관련 오류라서 코드 실행에는 딱히 문제가 없을 듯
pairplot으로 강도와 살인, 폭력 사이의 관계를 그래프로 그린게 아래 그림이죠
여기서는 회귀선까지 나타내기 위해서 옵션으로 kind = 'reg(regression 약자)'를 넣어줘서 산점도에 회귀선까지 나타나는 걸 볼 수 있고, 회귀선 경향을 보면 각 변수들이 모두 양의 상관관계를 갖고 있다는 걸 알 수 있습니다


In [60]
그리고 강도와 살인이랑 인구수, CCTV 사이의 관계만 따로 나타낸 그래프도 그렸구요
전체적으로 봤을 때는 회귀선의 기울기가 모두 양수라서 양의 상관관계를 갖는데, 근데 여기 이쪽 부분을 보면, CCTV 수가 적을 때, 살인이나 강도 비율이 높은 값들이 있잖아요 아예 이 직선만 보고 이 값들을 무시해버리기에는 좀 많이 존재하고 있단 말이에요 그래서 이런 것들에 좀 주의할 필요가 있겠구요


In [62]
그리고 이번에는 살인검거율, 폭력검거율이랑 인구수, CCTV 사이의 관계만 나타낸 그래프인데
또 여기서는 CCTV랑 두 검거율 사이에 음의 상관관계가 존재하는 걸 볼 수 있죠
그러니까, CCTV 수는 적은데, 범죄 검거율은 높은.
우리가 일반 상식적으로 생각했을 때와 반대되는 결과가 나오는 걸 확인할 수 있었죠


In [64]
다음은 앞에서 각 사건들을 최대값을 기준으로 해서 비율로 나타낸 것처럼 검거율의 합계인 '검거'라는 컬럼의 값중에 최대값을 기준으로 다른 걸 비율로 계산해서, 내림차순 정렬까지 해준 코드구요


In [65]
그래서 요 검거율을 대상으로 히트맵을 그려보면 
옵션을 잠깐 보자면 linewidths는 각 격자 사이마다 선을 넣어주고, 선의 굵기까지 지정. 위에서 그린 히트맵은 격자가 이렇게 다 붙어있잖아요.(간단하게 각 격자 사이의 간격을 조정해준다고 생각하면 될 것 같아요. 이 숫자를 크게 하면 그만큼 흰 선이 굵어지니까 간격이 더 벌어지겠죠)
cmap은 컬러 팔레트 지정해주는 변수

저희가 하고있는 이 실습이 깃허브 들어가셔서 봤다면 아시겠지만 이 기사를 바탕으로 이 내용이 정말 그런지 확인해보는 그런 실습이거든요
기사에서 강남 3구(강남, 서초, 송파)가 범죄 관련해서 사람들이 체감하는 안전도가 높다 라고 쓰여있는데 실제 분석 결과를 보면 서초구의 범죄검거율이 높은 편이 알 수 있구요


In [68]
발생 건수의 합으로 정렬해서 히트맵을 그리면, 그러니까 이제 범죄 발생 건수가 높은 순서대로 위에서부터 정렬한 거죠
보면 강남구가 제일 위에 있어서 범죄 발생이 가장 많이 일어나고, 송파구랑 서초구도 위쪽에 있어서 오히려 실제 데이터에 의하면 강남 3구에서 범죄가 좀 많이 발생한다는 걸 알 수 있죠

fmt = 숫자 형태 f니까 소수점

큐위오후 2:42
rayoh2098@gmail.com
허인범오후 2:43
inbum10222@gmail.com
